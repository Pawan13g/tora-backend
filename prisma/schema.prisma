// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum role {
  ADMIN
  USER
}

enum status {
  SUBMITTED
  APPROVED
  REJECTED
}

model User {
  id               Int                    @id @default(autoincrement())
  name             String
  email            String                 @unique
  password         String
  phoneNo          String
  ifsc             String
  accountNo        String
  bank             String
  sponserCode      String
  role             role                   @default(USER)
  isActive         Boolean                @default(true)
  createdAt        DateTime               @default(now())
  updatedAt        DateTime               @updatedAt
  PanelTaskRequest PanelTaskSubmissions[]
  DashTaskRequest  DashTaskSubmissions[]
}

model PanelTask {
  id               Int                    @id @default(autoincrement())
  name             String
  kpi              String
  amount           String
  t_link           String
  isActive         Boolean                @default(true)
  createdAt        DateTime               @default(now())
  updatedAt        DateTime               @updatedAt
  PanelTaskRequest PanelTaskSubmissions[]
}

model PanelTaskSubmissions {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  task        PanelTask @relation(fields: [panelTaskId], references: [id])
  panelTaskId Int
  status      status    @default(SUBMITTED)
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model DashboardTask {
  id              Int                   @id @default(autoincrement())
  name            String
  desc            String
  amount          String
  kpi             String
  t_link          String
  picture         String?
  isActive        Boolean               @default(true)
  createdAt       DateTime              @default(now())
  updatedAt       DateTime              @updatedAt
  DashTaskRequest DashTaskSubmissions[]
}

model DashTaskSubmissions {
  id        Int           @id @default(autoincrement())
  user      User          @relation(fields: [userId], references: [id])
  userId    Int
  task      DashboardTask @relation(fields: [taskId], references: [id])
  taskId    Int
  picture   String
  status    status        @default(SUBMITTED)
  isActive  Boolean       @default(true)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}
